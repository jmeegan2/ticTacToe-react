{"ast":null,"code":"var _jsxFileName = \"/Users/jamesmeegan/Desktop/softwareDev/ticTacToe-react/src/App.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value\n}) {\n  //value is the prop here \n\n  function handleClick() {\n    console.log('clicked!');\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: handleClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n//shift + option + 'f' to format\n\n//default means its the main function in the file\n_c = Square;\nexport default function Board() {\n  //Board is the component\n\n  // JSX is a combination of JavaScript code and html tags that describe what you'd like to display\n  // (<> and </>) are fragments and u use it to wrap multiple adjacent JSX elements\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: \"6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: \"7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: \"9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Board;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["Square","value","handleClick","console","log","_jsxDEV","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","_Fragment","_c2","$RefreshReg$"],"sources":["/Users/jamesmeegan/Desktop/softwareDev/ticTacToe-react/src/App.js"],"sourcesContent":["function Square({ value }) { //value is the prop here \n\n  function handleClick() {\n    console.log('clicked!')\n  }\n\n  return (\n    <button\n      className=\"square\"\n      onClick={handleClick}\n    >\n      {value}\n    </button>\n  );\n}\n\n//shift + option + 'f' to format\n\n//default means its the main function in the file\nexport default function Board() { //Board is the component\n\n  // JSX is a combination of JavaScript code and html tags that describe what you'd like to display\n  // (<> and </>) are fragments and u use it to wrap multiple adjacent JSX elements\n  return (\n    <>\n      <div className='board-row'>\n        <Square value=\"1\" />\n        <Square value=\"2\" />\n        <Square value=\"3\" />\n      </div>\n      <div className='board-row'>\n        <Square value=\"4\" />\n        <Square value=\"5\" />\n        <Square value=\"6\" />\n      </div>\n      <div className='board-row'>\n        <Square value=\"7\" />\n        <Square value=\"8\" />\n        <Square value=\"9\" />\n      </div>\n    </>\n  )\n}\n\n\n"],"mappings":";;AAAA,SAASA,MAAMA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAE;;EAE3B,SAASC,WAAWA,CAAA,EAAG;IACrBC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EACzB;EAEA,oBACEC,OAAA;IACEC,SAAS,EAAC,QAAQ;IAClBC,OAAO,EAAEL,WAAY;IAAAM,QAAA,EAEpBP;EAAK;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;;AAEA;;AAEA;AAAAC,EAAA,GAlBSb,MAAM;AAmBf,eAAe,SAASc,KAAKA,CAAA,EAAG;EAAE;;EAEhC;EACA;EACA,oBACET,OAAA,CAAAU,SAAA;IAAAP,QAAA,gBACEH,OAAA;MAAKC,SAAS,EAAC,WAAW;MAAAE,QAAA,gBACxBH,OAAA,CAACL,MAAM;QAACC,KAAK,EAAC;MAAG;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpBP,OAAA,CAACL,MAAM;QAACC,KAAK,EAAC;MAAG;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpBP,OAAA,CAACL,MAAM;QAACC,KAAK,EAAC;MAAG;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACNP,OAAA;MAAKC,SAAS,EAAC,WAAW;MAAAE,QAAA,gBACxBH,OAAA,CAACL,MAAM;QAACC,KAAK,EAAC;MAAG;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpBP,OAAA,CAACL,MAAM;QAACC,KAAK,EAAC;MAAG;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpBP,OAAA,CAACL,MAAM;QAACC,KAAK,EAAC;MAAG;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACNP,OAAA;MAAKC,SAAS,EAAC,WAAW;MAAAE,QAAA,gBACxBH,OAAA,CAACL,MAAM;QAACC,KAAK,EAAC;MAAG;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpBP,OAAA,CAACL,MAAM;QAACC,KAAK,EAAC;MAAG;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpBP,OAAA,CAACL,MAAM;QAACC,KAAK,EAAC;MAAG;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA,eACN,CAAC;AAEP;AAACI,GAAA,GAvBuBF,KAAK;AAAA,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}